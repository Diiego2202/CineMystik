<html>
<head>
    
    <link rel="stylesheet" href="/public/avaliar.css" />
</head>

<div class="margem">

<form id="form">
	<div>
		<label for="nome">Nome</label>
		<input type="text" id="nome" name="nome" maxlength="50" />
	</div>

	<div>
		<label for="nota">Nota</label>
		<input type="number" id="nota" name="nota" />
	</div>

	<div>
		<label for="comentario">Comentario</label>
		<input type="text" id="comentario" name="comentario" maxlength="50" />
	</div>

    <div>
		<label for="idFilme">idFilme</label>
		<input type="number" id="idFilme" name="idFilme" />
	</div>

	<div>
		<button type="submit">Avaliar</button>
	</div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="/public/js/fetch.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/additional-methods.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/localization/messages_pt_BR.min.js"></script>

<script type="text/javascript">

	$("#form").validate({
		rules: {
			// Aqui o que vale é o name, não o id!
			nome: {
				required: true,
				minlength: 3
			},
            nota: {
				required: true
			},
			comentario: {
				required: true
			},
			idFilme: {
				required: true
			}
		},

		submitHandler: function (form) {
			// Não pode simplesmente fazer submitHandler: criarPessoa, porque criarPessoa() é async... :(
            cadastrarAvaliacao(form);
		}
	});

	async function cadastrarAvaliacao(form) {
		// Vamos prevenir cliques duplos/acidentais :)
		if (fetchAtivo) {
			return;
		}

		let opcoes = {
			method: "POST",
			// Esta forma não depende do jQuery, não precisa configurar o header e
			// ainda permite o envio de arquivos! Mas precisa de uma linha de configuração
			// a mais do lado do Node.js!
		    body: new FormData(form)
		};

		try {
			let response = await fetch("/cadastrarAvaliacao", opcoes);

			if (response.ok) {
				// Limpa os campos para facilitar a criação da próxima pessoa.
				form.reset();
				// Limpa os erros e sucessos.
				$(form).validate().resetForm();

				alert("Avaliação cadastrada com sucesso!");
			} else {
				alert("Erro ao cadastras a avaliação!");
			}
		} catch (ex) {
			alert("Erro de rede: " + ex.message);
		}
	}
</script>

</div> 
